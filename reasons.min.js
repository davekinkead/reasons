(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Reasons=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";const Utils=require("./Utils");const maxWidth=200;const padding=10;const fontSize=16;module.exports={mixin:mixin,isEdge:isEdge,isNode:isNode,save:save};function mixin(element){element.isEdge=isEdge;element.isNode=isNode;element.export=save;element.collides=collides;element.move=move;return init(element)}function init(element){element.id=element.id||Math.random().toString(36).slice(-5);if(element.isEdge()){element.from=Utils.flatten([element.from]).map(from=>{return from.id||from});element.to=element.to.id||element.to;element.type=element.type||"supports";element.paths=[]}else{element.text=element.text||"A reason";element.width=maxWidth;element.height=fontSize*3.5;locate(element,{x:element.x||0,y:element.y||0})}return element}function isEdge(){return this.to&&this.from?true:false}function isNode(){return this.isEdge()?false:true}function collides(el){if(this.isEdge()){let hit=false;this.paths.forEach(path=>{if(differenceOfVectors(el,path)<.05)hit=true});let width=this.type.length*5;hit=el.x<this.center.x-width||el.x>this.center.x+width||el.y<this.center.y-10||el.y>this.center.y+10?false:true;return hit}else{if(el.isNode&&el.isNode())return this.x2<el.x1||this.x1>el.x2||this.y1>el.y2||this.y2<el.y1?false:true;else return el.x>this.x1&&el.x<this.x2&&el.y>this.y1&&el.y<this.y2?true:false}}function move(position){if(this.isNode()){this.x=position.x;this.y=position.y;locate(this,position)}}function save(){if(this.isEdge()){return{id:this.id,type:this.type,from:convertObjectsToIds(this.from),to:convertObjectsToIds(this.to)}}else{return{id:this.id,text:this.text,x:parseInt(this.x1+this.width/2),y:parseInt(this.y1+this.height/2)}}}function locate(element,position){if(element.isNode()){element.x1=parseInt(position.x-element.width/2);element.x2=parseInt(position.x+element.width/2);element.y1=parseInt(position.y-element.height/2);element.y2=parseInt(position.y+element.height/2)}}function convertObjectsToIds(obj){if(obj instanceof Array){return obj.map(el=>el.id||el)}else{return obj.id||obj}}function differenceOfVectors(point,path){return Math.abs(Math.atan2(point.y-path.y1,point.x-path.x1)-Math.atan2(path.y2-point.y,path.x2-point.x))}},{"./Utils":2}],2:[function(require,module,exports){module.exports={buildNode:function(type,options,attributes){const node=document.createElement(type);for(var key in options){node[key]=options[key]}for(var key in attributes){node.setAttribute(key,attributes[key])}return node},intersection:function(array1,array2){return array1.filter(function(n){return array2.indexOf(n)!==-1})},unique:require("array-unique"),flatten:require("array-flatten"),diff:require("array-difference")}},{"array-difference":10,"array-flatten":11,"array-unique":12}],3:[function(require,module,exports){arguments[4][1][0].apply(exports,arguments)},{"./Utils":2,dup:1}],4:[function(require,module,exports){"use strict";const Utils=require("./utils");const Element=require("./element");module.exports=Graph;function Graph(elements){if(elements instanceof Array){elements.sort((a,b)=>{return a.to?1:-1}).forEach(el=>this.add(el))}}Graph.prototype=Object.create(Array.prototype);Graph.prototype.add=function(element){Element.mixin(element);if(element.isNode()){this.push(element)}else{if(this.hasDuplicate(element)||this.isFromEdge(element)||this.isToEdge(element)){return false}let commonChildren=Utils.intersection(Utils.flatten(element.from.map(e=>this.children(e))),this.children(element.to)).map(el=>el.id);if(commonChildren.length>0){let commonParents=Utils.flatten([element.from,element.to]).map(el=>el.id||el);this.edges().forEach(edge=>{if(Utils.intersection(element.from,edge.from).length>0)this.remove(edge);if(edge.from.includes(element.to)){this.push(Element.mixin({from:Utils.flatten([edge.from,element.from]),to:edge.to,type:edge.type}));this.remove(edge)}})}else{this.push(element)}}};Graph.prototype.remove=function(el){let i=this.indexOf(el);if(i>-1){if(el.isNode()){let edgesTo=this.edges().filter(edge=>edge.to==el.id);let edgesFrom=this.edges().filter(edge=>edge.from.includes(el.id));let conjoined=edgesFrom.filter(edge=>edge.from.length>1);this.splice(i,1);edgesTo.forEach(edge=>{if(this.indexOf(edge)>-1)this.splice(this.indexOf(edge),1)});edgesFrom.forEach(edge=>{if(this.indexOf(edge)>-1)this.splice(this.indexOf(edge),1)});edgesFrom.filter(e=>e.from instanceof Array).map(e=>{if(e.from.indexOf(el)>-1)e.from.splice(e.from.indexOf(el),1);if(e.from.length===1)e.from=e.from[0]});conjoined.forEach(edge=>{edge.from.splice(edge.from.indexOf(el.id),1);this.push(edge)})}else{this.splice(i,1)}}return this};Graph.prototype.focus=function(el){let index=this.indexOf(el);if(index>-1){this.push(this.splice(index,1)[0])}this.forEach(function(e){e.focused=e===el?true:false});return el};Graph.prototype.unfocus=function(){this.forEach(function(el){el.focused=false});return this};Graph.prototype.last=function(){return this[this.length-1]};Graph.prototype.edges=function(){return this.filter(el=>el.from&&el.to)};Graph.prototype.nodes=function(){return this.filter(el=>!el.from||!el.to)};Graph.prototype.elements=function(){return this};Graph.prototype.parents=function(id){if(id instanceof Object)id=id.id;return Utils.flatten(this.edges().filter(el=>el.to==id).map(el=>el.from)).map(el=>this.find(i=>i.id==el))};Graph.prototype.children=function(id){if(id instanceof Object)id=id.id;return Utils.unique(this.edges().filter(el=>{return Utils.flatten([el.from]).map(el=>el.id||el).indexOf(id)>-1}).map(el=>el.to).map(el=>this.find(i=>i==el||i.id==el)))};Graph.prototype.hasDuplicate=function(el){Element.mixin(el);let dupe=false;if(el.isEdge()){this.edges().forEach(edge=>{if(el.to===edge.to&&el.from.toString()===edge.from.toString()){dupe=true}})}return dupe};Graph.prototype.isFromEdge=function(element){var fromEdge=false;element.from.forEach(el=>{var match=this.edges().find(e=>e.id==el);if(match)fromEdge=true});return fromEdge};Graph.prototype.isToEdge=function(element){let to=this.find(el=>el.id==element.to);if(to&&to.isEdge()){return true}}},{"./element":3,"./utils":8}],5:[function(require,module,exports){"use strict";const Graph=require("./graph");const UI=require("./ui");const View=require("./view");module.exports=Mapper;function Mapper(elementID){this.DOM=document.querySelector(elementID);if(this.DOM){View.init(this);UI.addEventListeners(this)}}Mapper.prototype.render=function(elements){this.graph=new Graph(elements);View.zero(this);View.draw(this);return this};Mapper.prototype.export=function(){return this.graph.map(element=>element.export())}},{"./graph":4,"./ui":7,"./view":9}],6:[function(require,module,exports){const Mapper=require("./mapper");module.exports={mapper:function(dom){return new Mapper(dom)}}},{"./mapper":5}],7:[function(require,module,exports){"use strict";const View=require("./view");const Utils=require("./utils");const Graph=require("./graph");const Keycode=require("keycode");const History=[];let Future=[];module.exports={addEventListeners:addEventListeners};function addEventListeners(argumentMap){argumentMap.altered=true;argumentMap.editMode=false;argumentMap.dirty=false;let mouseDown=false;let selected=null;let dragging=null;let clickPos=null;let metaKeyPressed=false;argumentMap.DOM.addEventListener("dblclick",event=>{const{position:position,collision:collision}=detect(argumentMap,event);if(collision){addOverlay(argumentMap,collision)}else{argumentMap.graph.add({x:position.x,y:position.y});selected=argumentMap.graph.last();argumentMap.graph.focus(selected);argumentMap.altered=true}redraw(argumentMap)});argumentMap.DOM.addEventListener("mousedown",event=>{const{position:position,collision:collision}=detect(argumentMap,event);if(collision){selected=collision;argumentMap.graph.focus(selected);argumentMap.dirty=true;clickPos=position;dragging=selected}redraw(argumentMap)});argumentMap.DOM.addEventListener("mousemove",event=>{const mouse=getPosition(event);argumentMap.graph.forEach(el=>{if(el.collides(mouse)){if(!el.hovering)argumentMap.dirty=true;el.hovering=true}else{if(el.hovering)argumentMap.dirty=true;el.hovering=false}});if(dragging){dragging.move(getPosition(event));argumentMap.dirty=true}redraw(argumentMap)});argumentMap.DOM.addEventListener("mouseup",event=>{const{position:position,collision:collision}=detect(argumentMap,event);if(dragging){const target=argumentMap.graph.nodes().find(el=>dragging.collides(el)&&dragging.id!==el.id);if(target){argumentMap.graph.add({from:dragging,to:target});dragging.move(clickPos)}argumentMap.altered=true;dragging=null}else if(!collision){selected=null;argumentMap.graph.unfocus();argumentMap.dirty=true}redraw(argumentMap)});window.addEventListener("click",event=>{if(argumentMap.editMode&&event.target.id==="reason-overlay"){removeOverlay(argumentMap)}});window.addEventListener("keydown",event=>{if(argumentMap.editMode){if(Keycode.isEventKey(event,"Escape"))removeOverlay(argumentMap);if(Keycode.isEventKey(event,"Enter"))submitOverlay(argumentMap)}else{if(isMetaKey(event))metaKeyPressed=true;if(!isMetaKey(event)&&Keycode.isEventKey(event,"tab")){event.preventDefault();selected=argumentMap.graph[0];argumentMap.graph.focus(selected);argumentMap.dirty=true}if(metaKeyPressed&&Keycode.isEventKey(event,"z")){event.preventDefault();save(Future,argumentMap);const last=History.pop();if(last){argumentMap.graph=new Graph(JSON.parse(last));argumentMap.dirty=true}}if(metaKeyPressed&&Keycode.isEventKey(event,"y")){event.preventDefault();save(History,argumentMap);const next=Future.pop();if(next){argumentMap.graph=new Graph(JSON.parse(next));argumentMap.dirty=true}}if(selected&&Keycode.isEventKey(event,"Enter")){addOverlay(argumentMap,selected)}if(Keycode.isEventKey(event,"Delete")||Keycode.isEventKey(event,"Backspace")){if(!argumentMap.editMode)event.preventDefault();if(selected){argumentMap.graph.remove(selected);argumentMap.dirty=true}}}redraw(argumentMap)});window.addEventListener("keyup",event=>{if(isMetaKey(event))metaKeyPressed=false});window.addEventListener("resize",event=>{argumentMap.altered=true;View.resize(argumentMap);View.zero(argumentMap);redraw(argumentMap)})}function redraw(argumentMap){if(argumentMap.altered||argumentMap.dirty){if(argumentMap.altered){save(History,argumentMap);Future=[]}View.draw(argumentMap);argumentMap.altered=false;argumentMap.dirty=false}}function save(store,argumentMap){const last=store.length==0?JSON.stringify([]):store[store.length-1];const current=JSON.stringify(argumentMap.graph.map(function(element){return element.export()}));if(current!==last)store.push(current)}function detect(argumentMap,event){return{position:getPosition(event),collision:argumentMap.graph.elements().find(el=>el.collides(getPosition(event)))}}function getPosition(event){return{x:parseInt(event.x||event.clientX),y:parseInt(event.y||event.clientY)}}function addOverlay(argumentMap,element){argumentMap.editMode=true;let overlay=Utils.buildNode("div",{id:"reason-overlay"});overlay.setAttribute("style","position:absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.75);");let input=Utils.buildNode("input",{id:"edit-reason-input"},{value:element.text||element.type});input.setAttribute("style","position:absolute; top: 45%; bottom: 50%; left: 25%; right: 50%; width:50%; padding: 1rem;");input.setAttribute("data-element",element.id);overlay.appendChild(input);document.body.appendChild(overlay);input.select()}function submitOverlay(argumentMap){let input=document.querySelector("#edit-reason-input");let el=argumentMap.graph.elements().find(el=>el.id==input.getAttribute("data-element"));if(el.isNode()){el.text=input.value}else{el.type=input.value}removeOverlay(argumentMap)}function removeOverlay(argumentMap){argumentMap.editMode=false;argumentMap.altered=true;document.querySelector("#reason-overlay").remove()}function isMetaKey(event){return event.metaKey||Keycode.isEventKey(event,"Alt")||Keycode.isEventKey(event,"Meta")||Keycode.isEventKey(event,"Command")||Keycode.isEventKey(event,"Control")||Keycode.isEventKey(event,"Win")||Keycode.isEventKey(event,"ControlLeft")||Keycode.isEventKey(event,"ControlRight")?true:false}},{"./graph":4,"./utils":8,"./view":9,keycode:13}],8:[function(require,module,exports){arguments[4][2][0].apply(exports,arguments)},{"array-difference":10,"array-flatten":11,"array-unique":12,dup:2}],9:[function(require,module,exports){"use strict";const Element=require("./Element");const Utils=require("./utils");const maxWidth=200;const padding=10;const fontSize=16;const cornerRadius=4;const rgbFocused="81,36,122";const rgbDefault="0,0,0";let dpr=1;let graph={};module.exports=function(){function init(argument){dpr=window.devicePixelRatio||1;let domBB=argument.DOM.getBoundingClientRect();let canvas=Utils.buildNode("canvas",{id:"reasons-"+argument.DOM.id},{width:domBB.width,height:domBB.height});argument.DOM.appendChild(canvas);argument.context=canvas.getContext("2d",{alpha:true})}function draw(argument){clear(argument);graph=argument.graph;graph.edges().forEach(el=>draw_edge(el,argument.context));graph.nodes().forEach(el=>draw_node(el,argument.context))}function zero(argument){let nodeBB=argument.graph.nodes().map(node=>{return{x1:node.x1,x2:node.x2,y1:node.y1,y2:node.y2}}).reduce((acc,cur)=>{return{x1:Math.min(acc.x1,cur.x1),x2:Math.max(acc.x2,cur.x2),y1:Math.min(acc.y1,cur.y1),y2:Math.max(acc.y2,cur.y2)}});let mid={x:(argument.DOM.clientWidth-argument.DOM.clientLeft)/2+argument.DOM.clientLeft-((nodeBB.x2-nodeBB.x1)/2+nodeBB.x1),y:(argument.DOM.clientHeight-argument.DOM.clientTop)/2+argument.DOM.clientTop-((nodeBB.y2-nodeBB.y1)/2+nodeBB.y1)};argument.graph.nodes().forEach(node=>{node.x1+=mid.x;node.x2+=mid.x;node.y1+=mid.y;node.y2+=mid.y})}function resize(argument){argument.DOM.children[1].width=argument.DOM.clientWidth-argument.DOM.clientLeft;argument.DOM.children[1].height=argument.DOM.clientHeight-argument.DOM.clientTop}return{init:init,draw:draw,zero:zero,resize:resize}}();function clear(argument){let domBB=argument.DOM.getBoundingClientRect();argument.context.clearRect(0,0,domBB.width,domBB.height)}function draw_node(node,context){const text=wordWrap(node.text,context);const rgb=node.hovering?rgbFocused:rgbDefault;const opacity=node.focused?.9:node.hovering?.75:.5;node.height=text.length*fontSize+fontSize*2.5;resize(node);context.clearRect(node.x1,node.y1,node.width,node.height);context.strokeStyle="rgba("+rgb+","+opacity+")";context.lineJoin="round";context.lineWidth=cornerRadius;context.strokeRect(node.x1+cornerRadius/2,node.y1+cornerRadius/2,node.width-cornerRadius,node.height-cornerRadius);context.fillStyle="rgba("+rgb+",0.8)";context.font=fontSize+"px sans-serif";context.textAlign="center";text.forEach((line,i)=>{context.fillText(line,node.x1+node.width/2,node.y1+(i+2)*fontSize)})}function draw_edge(edge,context){locate(edge);const rgb=edge.hovering?rgbFocused:rgbDefault;const opacity=edge.focused?.9:edge.hovering?.75:.5;context.strokeStyle="rgba("+rgb+","+opacity+")";context.lineWidth=4;context.beginPath();edge.paths.forEach(path=>{context.moveTo(path.x1,path.y1);context.lineTo(path.x2,path.y2)});let last=edge.paths[edge.paths.length-1];let arrow=arrowify(last);context.lineTo(arrow.x1,arrow.y1);context.moveTo(last.x2,last.y2);context.lineTo(arrow.x2,arrow.y2);context.stroke();let textWidth=context.measureText(edge.type).width+padding;context.clearRect(edge.center.x-textWidth/2,edge.center.y-15,textWidth,25);context.fillStyle="rgba("+rgb+",0.8)";context.font="14px sans-serif";context.textAlign="center";context.fillText(edge.type,edge.center.x,edge.center.y);if(edge.intersection)context.fillRect(edge.intersection.x,edge.intersection.y,10,10)}function locate(edge){let ids=Utils.flatten([edge.from,edge.to]);let elements=graph.filter(el=>{return ids.includes(el.id)});let coords=elements.map(el=>{return{x:el.x1+el.width/2,y:el.y1+el.height/2}});edge.center={x:Math.max(...coords.map(el=>el.x))-(Math.max(...coords.map(el=>el.x))-Math.min(...coords.map(el=>el.x)))/2,y:Math.max(...coords.map(el=>el.y))-(Math.max(...coords.map(el=>el.y))-Math.min(...coords.map(el=>el.y)))/2};edge.paths=edge.from.map(node=>{let el=elements.find(e=>e.id==node);return{x1:parseInt(el.x1+(el.x2-el.x1)/2),y1:parseInt(el.y1+(el.y2-el.y1)/2),x2:parseInt(edge.center.x),y2:parseInt(edge.center.y)}});let to=elements.find(e=>e.id==edge.to);let offset=pointOfIntersection(edge.center,to,5);edge.paths.push({x1:parseInt(edge.center.x),y1:parseInt(edge.center.y),x2:parseInt(to.x1+(to.x2-to.x1)/2)-offset.x,y2:parseInt(to.y1+(to.y2-to.y1)/2)+offset.y})}function resize(node){node.x2=node.x1+node.width;node.y2=node.y1+node.height}function wordWrap(text,context){let words=text.split(" ");let lines=[];let line="";words.forEach(word=>{let width=context.measureText(line+" "+word).width;if(width<maxWidth-padding*2){line+=" "+word}else{lines.push(line);line=word}});lines.push(line);return lines}function arrowify(path){let angle=Math.atan2(path.y1-path.y2,path.x1-path.x2);return{x1:path.x2+10*Math.cos(angle+.5),y1:path.y2+10*Math.sin(angle+.5),x2:path.x2+10*Math.cos(angle-.5),y2:path.y2+10*Math.sin(angle-.5)}}function pointOfIntersection(from,rect,buffer){let center={x:rect.x1+rect.width/2,y:rect.y1+rect.height/2};let angle=Math.atan2(from.y-center.y,center.x-from.x);let absCos=Math.abs(Math.cos(angle));let absSin=Math.abs(Math.sin(angle));let distance=rect.width/2*absSin<=rect.height/2*absCos?rect.width/2/absCos:rect.height/2/absSin;distance+=buffer||0;return{x:distance*Math.cos(angle),y:distance*Math.sin(angle)}}},{"./Element":1,"./utils":8}],10:[function(require,module,exports){(function(global){var indexOf=Array.prototype.indexOf||function(elem){var idx,len;if(this==null){throw new TypeError("indexOf called on null or undefined")}for(idx=0,len=this.length;idx<len;++idx){if(this[idx]===elem){return idx}}return-1};function difference(a,b){var idx,len;var res=[];for(idx=0,len=a.length;idx<len;++idx){if(indexOf.call(b,a[idx])===-1){res.push(a[idx])}}for(idx=0,len=b.length;idx<len;++idx){if(indexOf.call(a,b[idx])===-1){res.push(b[idx])}}return res}if(typeof module==="object"&&module.exports){module.exports=difference}else if(typeof define==="function"&&define.amd){define(function(){return difference})}else{global.difference=difference}})(this)},{}],11:[function(require,module,exports){"use strict";module.exports=flatten;module.exports.from=flattenFrom;module.exports.depth=flattenDepth;module.exports.fromDepth=flattenFromDepth;function flatten(array){if(!Array.isArray(array)){throw new TypeError("Expected value to be an array")}return flattenFrom(array)}function flattenFrom(array){return flattenDown(array,[])}function flattenDepth(array,depth){if(!Array.isArray(array)){throw new TypeError("Expected value to be an array")}return flattenFromDepth(array,depth)}function flattenFromDepth(array,depth){if(typeof depth!=="number"){throw new TypeError("Expected the depth to be a number")}return flattenDownDepth(array,[],depth)}function flattenDown(array,result){for(var i=0;i<array.length;i++){var value=array[i];if(Array.isArray(value)){flattenDown(value,result)}else{result.push(value)}}return result}function flattenDownDepth(array,result,depth){depth--;for(var i=0;i<array.length;i++){var value=array[i];if(depth>-1&&Array.isArray(value)){flattenDownDepth(value,result,depth)}else{result.push(value)}}return result}},{}],12:[function(require,module,exports){"use strict";module.exports=function unique(arr){if(!Array.isArray(arr)){throw new TypeError("array-unique expects an array.")}var len=arr.length;var i=-1;while(i++<len){var j=i+1;for(;j<arr.length;++j){if(arr[i]===arr[j]){arr.splice(j--,1)}}}return arr};module.exports.immutable=function uniqueImmutable(arr){if(!Array.isArray(arr)){throw new TypeError("array-unique expects an array.")}var arrLen=arr.length;var newArr=new Array(arrLen);for(var i=0;i<arrLen;i++){newArr[i]=arr[i]}return module.exports(newArr)}},{}],13:[function(require,module,exports){function keyCode(searchInput){if(searchInput&&"object"===typeof searchInput){var hasKeyCode=searchInput.which||searchInput.keyCode||searchInput.charCode;if(hasKeyCode)searchInput=hasKeyCode}if("number"===typeof searchInput)return names[searchInput];var search=String(searchInput);var foundNamedKey=codes[search.toLowerCase()];if(foundNamedKey)return foundNamedKey;var foundNamedKey=aliases[search.toLowerCase()];if(foundNamedKey)return foundNamedKey;if(search.length===1)return search.charCodeAt(0);return undefined}keyCode.isEventKey=function isEventKey(event,nameOrCode){if(event&&"object"===typeof event){var keyCode=event.which||event.keyCode||event.charCode;if(keyCode===null||keyCode===undefined){return false}if(typeof nameOrCode==="string"){var foundNamedKey=codes[nameOrCode.toLowerCase()];if(foundNamedKey){return foundNamedKey===keyCode}var foundNamedKey=aliases[nameOrCode.toLowerCase()];if(foundNamedKey){return foundNamedKey===keyCode}}else if(typeof nameOrCode==="number"){return nameOrCode===keyCode}return false}};exports=module.exports=keyCode;var codes=exports.code=exports.codes={backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,"pause/break":19,"caps lock":20,esc:27,space:32,"page up":33,"page down":34,end:35,home:36,left:37,up:38,right:39,down:40,insert:45,delete:46,command:91,"left command":91,"right command":93,"numpad *":106,"numpad +":107,"numpad -":109,"numpad .":110,"numpad /":111,"num lock":144,"scroll lock":145,"my computer":182,"my calculator":183,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222};var aliases=exports.aliases={windows:91,"⇧":16,"⌥":18,"⌃":17,"⌘":91,ctl:17,control:17,option:18,pause:19,break:19,caps:20,return:13,escape:27,spc:32,spacebar:32,pgup:33,pgdn:34,ins:45,del:46,cmd:91};for(i=97;i<123;i++)codes[String.fromCharCode(i)]=i-32;for(var i=48;i<58;i++)codes[i-48]=i;for(i=1;i<13;i++)codes["f"+i]=i+111;for(i=0;i<10;i++)codes["numpad "+i]=i+96;var names=exports.names=exports.title={};for(i in codes)names[codes[i]]=i;for(var alias in aliases){codes[alias]=aliases[alias]}},{}]},{},[6])(6)});